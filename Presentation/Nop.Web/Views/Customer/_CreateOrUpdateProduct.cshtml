@model CustomerProductModel

@{
    var showTour = ViewBag.ShowTour ?? false;

    // const string hideInfoBlockAttributeName = "ProductPage.HideInfoBlock";
    // var customer = await workContext.GetCurrentCustomerAsync();
    // var hideInfoBlock = showTour ? false : await genericAttributeService.GetAttributeAsync<bool>(customer, hideInfoBlockAttributeName);
    NopHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery/jquery.min.js");
}

<input class="product-id" asp-for="Id" type="hidden" />
<div class="edit-product">
    <div class="inputs">
        <label asp-for="Name" asp-postfix="-:"></label>
        <input asp-for="Name" />
        <nop-required />
        <span asp-validation-for="Name"></span>
    </div>
    <div class="inputs">
        <label asp-for="ShortDescription" asp-postfix=":"></label>
        <input asp-for="ShortDescription" />
        <nop-required />
        <span asp-validation-for="ShortDescription"></span>
    </div>
    <div class="inputs">
        <label asp-for="FullDescription" asp-postfix=":"></label>
        <nop-editor asp-for="FullDescription" asp-template="RichEditor" />
        <nop-required />
        <span asp-validation-for="FullDescription"></span>
    </div>



    <nop-cards id="product-cards">
        <div class="card-body">
            @if (Model.Id > 0)
            {
                <nop-tabs id="productmultimedia-edit" asp-tab-name-to-select="tab-pictures" asp-render-selected-tab-input="false">
                    <nop-tab asp-name="tab-pictures" asp-title="@T("Admin.Catalog.Products.Multimedia.Pictures")" asp-default="true">@await Html.PartialAsync("_CreateOrUpdate.Multimedia.Pictures", Model)</nop-tab>
                    @* <nop-tab asp-name="tab-videos" asp-title="@T("Admin.Catalog.Products.Multimedia.Videos")">@await Html.PartialAsync("_CreateOrUpdate.Multimedia.Videos", Model)</nop-tab> *@
                </nop-tabs>
            }
            else
            {
                <div class="card card-default">
                    <div class="card-body">
                        @T("Admin.Catalog.Products.Multimedia.Videos.SaveBeforeEdit")
                    </div>
                </div>
            }
        </div>
    </nop-cards>

    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductBottom, additionalData = Model })

</div>
