@model CustomerProductModel

@{
    var showTour = ViewBag.ShowTour ?? false;
    await Html.RenderPartialAsync("_CustomerProductsScripts.cshtml");
}


<input class="product-id" asp-for="Id" type="hidden" />


<nop-cards id="product-cards">
    
    <div class="card-body">
            <div id="product-details-area">
                <div>
                    <div class="form-group row">
                        <div class="col-md-3">
                            <nop-label asp-for="@Model.Name" asp-postfix=":" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="@Model.Name" />
                            <nop-required />
                            <span asp-validation-for="@Model.Name"></span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            <nop-label asp-for="@Model.ShortDescription" asp-postfix=":" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="@Model.ShortDescription" />
                            <nop-required />
                            <span asp-validation-for="@Model.ShortDescription"></span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            <nop-label asp-for="@Model.FullDescription" asp-postfix=":" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="@Model.FullDescription" asp-template="RichEditor" />
                            <span asp-validation-for="@Model.FullDescription"></span>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    
    <div class="card-body">
    
        
            @if (Model.Id > 0)
            {
                <nop-tabs id="productmultimedia-edit" asp-tab-name-to-select="tab-pictures" asp-render-selected-tab-input="false">
                    <nop-tab asp-name="tab-pictures" asp-title="@T("Admin.Catalog.Products.Multimedia.Pictures")" asp-default="true">
                        @await Html.PartialAsync("_CreateOrUpdate.Multimedia.Pictures.cshtml", Model)
                    </nop-tab>
                    <nop-tab asp-name="tab-videos" asp-title="@T("Admin.Catalog.Products.Multimedia.Videos")">
                        @await Html.PartialAsync("_CreateOrUpdate.Multimedia.Videos.cshtml", Model)
                    </nop-tab> 
                </nop-tabs>
            }
            else
            {
                <div class="card card-default">
                    <div class="card-body">
                        @T("Admin.Catalog.Products.Multimedia.Videos.SaveBeforeEdit")
                    </div>
                </div>
            }
    </div>
</nop-cards>

    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductBottom, additionalData = Model })

</div>

<style>
    .ico-help{
        display: inline;
        margin-left: 5%;
        color: #3c8dbc;
        font-size: 1.17em;
        padding-left: 6px;
    }
    .text-box{
        width: 95%;
        display: inline;
    }
</style>


<script>
    

    function ValidateForm(form) {

        console.log('@Html.NameFor(m => m.AddVideoModel.VideoUrl)');
        form.validate({
            rules: {
                '@Html.NameFor(m => m.AddVideoModel.VideoUrl)': {
                    required: true,
                }
            },
            messages: {
                '@Html.NameFor(m => m.AddVideoModel.VideoUrl)': {
                    required: 'Video url is required',
                },
            },
            errorPlacement: function (error, element) {
                element.after(error);
            }
            
        });
        return form.valid();
    }
</script>

