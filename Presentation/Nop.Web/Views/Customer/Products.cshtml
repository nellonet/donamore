@model CustomerProductListModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-address-list-page");
}
@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.CustomerProducts })
}
<div class="page account-page address-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerProducts")</h1>
    </div>
    <div class="page-body">
        @if (Model.Products.Count > 0)
        {
                <div class="address-list">
                    @for (var i = 0; i < Model.Products.Count; i++)
                    {
                        var product = Model.Products[i];
                        <div class="section address-item">
                            <div class="title">
                                <strong>@product.Id + " " + @product.Name </strong>
                            </div>
                            <ul class="info">
                               @product.Id
                            </ul>
                                
                            <div class="buttons">
                                <button type="button" class="button-2 edit-address-button" onclick="location.href = '@(Url.RouteUrl("CustomerProductEdit", new {productId = product.Id}))'">@T("Common.Edit")</button>

                                <button type="button" class="button-2 delete-address-button" onclick="deletecustomerproduct(@(product.Id))">@T("Common.Delete")</button>
                            </div>
                        </div>
                    }
                </div>
                <script asp-location="Footer">
                    function deletecustomerproduct(productId) {
                        if (confirm('@T("Common.AreYouSure")')) {
                            var postData = {
                                productId: productId
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@Url.Action("ProductDelete", "Customer")",
                                data: postData,
                                dataType: "json",
                                success: function (data, textStatus, jqXHR) {
                                    location.href = data.redirect;
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert('Failed to delete');
                                }
                            });
                        }
                    }
                </script>
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerProducts.NoProducts")
            </div>
        }
        <div class="add-button">
            <button type="button" class="button-1 add-address-button" onclick="location.href='@Url.RouteUrl("CustomerProductAdd")'">@T("Common.AddNew")</button>
        </div>
    </div>
</div>