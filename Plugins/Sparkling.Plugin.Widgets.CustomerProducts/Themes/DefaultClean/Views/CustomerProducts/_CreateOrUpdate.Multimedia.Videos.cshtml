@model CustomerProductsModel

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "productvideos-grid",
        UrlRead = new DataUrl("ProductVideoList", "CustomerProducts", new RouteValueDictionary { [nameof(Model.ProductPictureSearchModel.ProductId)] = Model.Id }),
        UrlDelete = new DataUrl("ProductVideoDelete", "CustomerProducts", null),
        UrlUpdate = new DataUrl("ProductVideoUpdate", "CustomerProducts", null),
        Length = Model.ProductVideoSearchModel.PageSize,
        LengthMenu = Model.ProductVideoSearchModel.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(ProductVideoModel.Id))
            {
                Title = T("Plugin.Widgets.CustomerProducts.Catalog.Products.Multimedia.Videos.Fields.Preview").Text,
                Render = new RenderCustom("renderVideosColumnProductVideoUrl")
            },
            new ColumnProperty(nameof(ProductVideoModel.VideoUrl))
            {
                Title = T("Plugin.Widgets.CustomerProducts.Catalog.Products.Multimedia.Videos.Fields.VideoUrl").Text,
                Width = "400",
                Editable = true,
                EditType = EditType.String
            },
            new ColumnProperty(nameof(ProductVideoModel.DisplayOrder))
            {
                Title = T("Plugin.Widgets.CustomerProducts.Catalog.Products.Multimedia.Videos.Fields.DisplayOrder").Text,
                Width = "150",
                ClassName = NopColumnClassDefaults.CenterAll,
                Editable = true,
                EditType = EditType.Number
            },
            new ColumnProperty(nameof(ProductVideoModel.Id))
            {
                Title = T("Admin.Common.Edit").Text,
                Width = "200",
                ClassName =  NopColumnClassDefaults.Button,
                Render = new RenderButtonsInlineEdit()
            },
            new ColumnProperty(nameof(ProductVideoModel.Id))
            {
                Title = T("Admin.Common.Delete").Text,
                Width = "100",
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                ClassName = NopColumnClassDefaults.Button
            }
        }
    })
    <script>
        function renderVideosColumnProductVideoUrl(data, type, row, meta) {
            return '<iframe src="' + row.VideoUrl + '" width="300" /></iframe>';
        }
    </script>
    <div class="card card-default">
        <div class="card-header">
            @T("Plugin.Widgets.CustomerProduct.Catalog.Products.Multimedia.Videos.AddNew")
        </div>
        <div class="card-body">
            <div class="form-group row">
                <div class="col-md-3">
                    <nop-label asp-for="AddVideoModel.VideoUrl" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="AddVideoModel.VideoUrl" class="required" />
                    <nop-required />
                    <span asp-validation-for="AddVideoModel.VideoUrl"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-3">
                    <nop-label asp-for="AddVideoModel.DisplayOrder" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="AddVideoModel.DisplayOrder"/>
                    <span asp-validation-for="AddVideoModel.DisplayOrder" ></span>
                    <style>
                        .k-numeric-wrap{
                            width: 50%;
                        }
                    </style>
                    <script src="~/lib/kendo/2020.1.406/js/kendo.ui.core.min.js"></script>
                    <script>$(document).ready(function () { $("#AddVideoModel_DisplayOrder").kendoNumericTextBox({ value: "0", decimals: 0, restrictDecimals: !0, format: "# " }) })</script>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-9 offset-md-3">
                    <button type="button" id="addProductVideo" class="btn btn-primary">@T("Plugin.Widgets.CustomerProduct.Catalog.Products.Multimedia.Videos.AddButton")</button>
                </div>
            </div>
        </div>
        <script>
            $(document).ready(function () {
                $('#addProductVideo').click(function () {

                    let video_url = $("#@Html.IdFor(model => model.AddVideoModel.VideoUrl)").val();

                    if (video_url == null || video_url.trim() === "") {
                        $('[href="#tab-videos"]').tab('show');

                        if ($("#video-error").length > 0)
                            return;

                        $('[data-valmsg-for="AddVideoModel.VideoUrl"]').after($('<span style="color: red;" id="video-error">you have to write a url</span>'));

                        return;
                    }

                    let display_order = $("#@Html.IdFor(model => model.AddVideoModel.DisplayOrder)").val();

                    $('#addProductVideo').attr('disabled', true);
                    var postData = {
                        VideoUrl: video_url,
                        DisplayOrder: display_order
                    };
                    addAntiForgeryToken(postData);
                    
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "@Html.Raw(Url.Action("ProductVideoAdd", "CustomerProducts", new { ProductId = Model.Id }))",
                        data: postData,
                        success: function (data, textStatus, jqXHR) {
                            if (data.success) {
                                updateTable('#productvideos-grid');

                                $("#@Html.IdFor(model => model.AddVideoModel.VideoUrl)").val('');
                                $("#@Html.IdFor(model => model.AddVideoModel.DisplayOrder)").val('');
                            } else {
                                display_nop_error(data);
                            }
                        },
                        complete: function (jqXHR, textStatus) {
                            $('#addProductVideo').attr('disabled', false);
                        }
                    });
                });

                $("#@Html.IdFor(model => model.AddVideoModel.VideoUrl)").on('focus', function () {
                    $("#video-error").remove();
                })
            });
        </script>
    </div>
</div>